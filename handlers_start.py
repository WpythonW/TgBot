# handlers_start.py

from aiogram import types
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from database import db
from keyboards import get_main_keyboard, get_inline_keyboard
from aiogram.types import Message
from handlers_user_input import update_user_data, show_current_data, show_registration_number, cancel_participation
import logging
from config import CHANNEL_NAME

async def cmd_start(message: Message, state: FSMContext):
    logging.info(f"Start command received from user {message.from_user.id}")
    user_id = message.from_user.id
    user_data = await db.db_operation('select', user_id=user_id)
    if not user_data:
        await db.db_operation('insert', user_id=user_id)
        user_data = (user_id, None, None, None, None, None, None, None)
    
    user_dict = {
        'email': user_data[1] if user_data else None, 
        'city': user_data[2] if user_data else None, 
        'post_link': user_data[3] if user_data else None, 
        'phone': user_data[4] if user_data else None,
        'name': user_data[5] if user_data else None,
        'company': user_data[6] if user_data else None,
        'position': user_data[7] if user_data else None
    }
    
    await state.set_data(user_dict)
    
    welcome_text = ("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –ø–æ —Ä–æ–∑—ã–≥—Ä—ã—à—É —Å–∫—É—Ç–µ—Ä–∞. üõµ\n\n"
                    f"–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_NAME} –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n"
                    "- –ò–º—è\n"
                    "- –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞\n"
                    "- –ì–æ—Ä–æ–¥\n"
                    "- –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç\n"
                    "- –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
                    "- –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏\n"
                    "- –î–æ–ª–∂–Ω–æ—Å—Ç—å\n\n"
                    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–≤–æ–¥–∞ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –£—á—Ç–∏—Ç–µ, —á—Ç–æ –ø—Ä–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤, –≤ —Ç–æ–º —á–∏—Å–ª–µ, –ø—É–Ω–∫—Ç 3 (–ø—É–±–ª–∏–∫–∞—Ü–∏—è —Ñ–æ—Ç–æ —Å–∫—É—Ç–µ—Ä–∞)")
    
    await message.answer(welcome_text)
    logging.info(f"Welcome message sent to user {message.from_user.id}")
    
    await update_user_data(message, state)

def register_handlers_start(dp):
    dp.message.register(cmd_start, Command("start"))
    dp.message.register(show_registration_number, Command("number"))
    dp.message.register(show_current_data, Command("mydata"))
    dp.message.register(cancel_participation, Command("cancel"))
